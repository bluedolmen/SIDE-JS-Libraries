	goog.require("SIDE.Util");
	goog.require("SIDE.pattern.Observer");
	goog.require("SIDE.view.ui.FlashPreview");
	goog.require("SIDE.view.ui.PDFPreview");
	goog.require("SIDE.view.ui.Tree");
	goog.require("SIDE.model.view.View");
	goog.require("SIDE.security.Authenticator");

	/*
	function gridRefresh () {
	//alert('coucou');
	   aView.sg.getStore().load();
	   aView.show();
	}*/

	Ext.onReady(function() {
	    Ext.QuickTips.init();

		var cp = new Ext.state.CookieProvider({
			expires: new Date(new Date().getTime()+(1000*60*60*24*30)) //30 days
		});
		Ext.state.Manager.setProvider(cp);

		SIDE.pattern.Observer.subscribe("/authenticate/ticket", function(data) {
			SIDE.pattern.Observer.log.debug("Authenticate/ticket : Data = ", data);
			var ticket = data.value;
			var tree = new SIDE.view.ui.Tree({
				'pUrl': SIDE.params.alfresco + "/service/cmis/p?alf_ticket=" + ticket,
				'iUrl': SIDE.params.alfresco + "/service/cmis",
				'ticket': ticket,
				'height': "200px",
				'id': 'repository-explorer',
				'rootText': 'Alfresco Repo',
				'messageName': '/repository/uuid'
			});
			tree.load();
		});
		
		SIDE.pattern.Observer.subscribe("/authenticate/ticket", function(data) {
			var ticket = data.value;
		//	var url = alfresco + "/service/com/bluexml/side/view/yamma_share/Person_DataList.json"
		//  var url = share + "/proxy/alfresco/com/bluexml/side/view/yamma_share/Person_DataList.json"
			var url = SIDE.Util.getParam("viewWebService");
			aView = new SIDE.model.view.View(ticket, url, view, 'grid');
			view['height'] = "300";
			view['width'] = "100%";
			view['enableGrouping'] = false;
			view['enablePaging'] = true;
			viewConfig['getRowClass'] = function(record, rowIndex, p, store){
		        if(this['showPreview']){
		            p.body = '<p>' + record['data']['com_sidelabs_is_operational_yamma_Titleable_title'] + '</p>';
		            return 'x-grid3-row-expanded';
		        }
		        return 'x-grid3-row-collapsed';
		    }
			
			aView.show();
			aView.sg.getGrid().on('rowmousedown', function(a, rowIndex, c, d) {
				var record = this['store'].getAt(rowIndex);
	    		SIDE.pattern.Observer.publish("/repository/uuid", [{'value': record}]);
			});
			
			//var t = setInterval('gridRefresh()',5000);

		});		

		SIDE.pattern.Observer.subscribe("/repository/uuid", function(data) {
			new SIDE.component.view.Previewer(data);
		});

		var guardian = new SIDE.security.Authenticator(SIDE.params.alfresco + "/service/api/login");
		guardian.getTicket("admin", "admin"); 
	});
		